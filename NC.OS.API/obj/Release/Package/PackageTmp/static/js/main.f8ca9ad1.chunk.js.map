{"version":3,"sources":["images/logo-trends-featured.png","registerServiceWorker.js","config.js","services/cookieManager.js","services/base.http.js","services/account/action.js","services/account/reducer.js","firebase-config.js","services/upload/action.js","services/upload/reducer.js","services/menu/action.js","services/menu/reducer.js","services/category/action.js","services/category/reducer.js","services/waiting_button/reducer.js","const/enum.js","services/table/reducer.js","services/toast/reducer.js","services/reducers.js","services/waiting_button/action.js","services/table/action.js","services/toast/action.js","store.js","validator/validator-input.js","renderfields/dask/index.js","scenes/Login/index.js","components/IconBar/index.js","hoc/clickOutside.js","context.js","components/DropdownMenuItem/index.js","components/DropdownMenu/index.js","components/Header/components/UserBar/index.js","components/Header/index.js","components/Body/index.js","layouts/MainLayout.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","config","env","process","masterKey","development","baseApi","staging","production","cookieManager","getToken","getCookie","getUserInfo","setToken","token","exdays","setCookie","setUserInfo","userInfo","hasToken","checkCookie","removeToken","removeCookie","removeUserInfo","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","cvalue","JSON","stringify","d","Date","setTime","getTime","expires","toUTCString","axiosAuthRequestConfig","baseURL","headers","Authorization","LOGIN","checkAuth","initState","isLoggedIn","errMsg","fbase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","UPLOAD_FINISH","storage","ref","UPDATE_PROGRESS","DELETE_IMAGE","CLEAN_UP","finished","uploadName","progress","fileUrls","v","RENDER_MENU","render","DELETE_CATEGORY","id","buttonState","actionName","tableName","data","count","msg","type","combineReducers","categories","arguments","undefined","action","payload","Object","objectSpread","menu","account","_action$payload","upload","index","splice","toConsumableArray","waitingButton","form","reduxFormReducer","table","rows","toast","createStore","reducers","required","value","concat","email","validator","isEmail","renderInput","_ref","input","className","label","_ref$meta","meta","touched","warning","react_default","a","createElement","assign","placeholder","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remember","rememberClass","bind","assertThisInitialized","submitLogin","setState","values","history","dispatch","isRemember","password","exDays","userName","push","_this$props","pristine","handleSubmit","submitting","invalid","onSubmit","src","logo","alt","Field","component","validate","onClick","login","disabled","htmlFor","onChange","React","Component","enhance","compose","reduxForm","connect","IconBar","number","icon","clickOutside","WrappedComponent","_React$Component","_temp","handlerClick","isOpen","event","isCanceled","node","contains","target","setTimeout","toggle","createRef","inherits","createClass","key","addEventListener","removeEventListener","nextProps","nextState","_this2","nodeRef","el","MatchPropsContext","createContext","DropdownMenuItem","menuItem","bag","style","bagColor","bagNumber","DropdownMenu","listMenu","menuStyles","generateMenu","map","res","components_DropdownMenuItem","UserBar","matchProps","components_DropdownMenu","styles","top","right","width","Consumer","UserBar_UserBar","Header","components_UserBar","components_IconBar","Body","children","MainLayout","components_Header","components_Body","build","store","ToastStore","position","ToastContainer","POSITION","TOP_RIGHT","lightBackground","MainLayoutRoute","rest","objectWithoutProperties","Route","Provider","layouts_MainLayout","Redirect","to","Dashboard","Loadable","loader","Promise","all","e","loading","preload","ReactDOM","BrowserRouter","es","Switch","exact","path","src_MainLayoutRoute","getElementById","URL","origin","fetch","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f8ca9ad1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-trends-featured.6d9bf479.png\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const config = {\n  env: process.env.REACT_APP_ENV || \"development\",\n  masterKey: process.env.REACT_APP_MASTERKEY || \"\",\n  development: {\n    baseApi: \"http://localhost:9000\"\n  },\n  staging: {\n    baseApi: \"http://localhost:9000\"\n  },\n  production: {\n    baseApi: \"http://localhost:9000\"\n  }\n};\n\nexport const masterKey = config[\"masterKey\"];\nexport default config[config.env];\n","const TOKEN = \"TOKEN\";\nconst USER_INFO = \"USER_INFO\";\n\n// We can use cookie instead\nconst cookieManager = {\n  getToken: function() {\n    return cookieManager.getCookie(TOKEN);\n  },\n  getUserInfo: function() {\n    return cookieManager.getCookie(USER_INFO);\n  },\n  setToken: function(token, exdays) {\n    cookieManager.setCookie(TOKEN, token, exdays);\n  },\n  setUserInfo: function(userInfo, exdays) {\n    cookieManager.setCookie(USER_INFO, userInfo, exdays);\n  },\n  hasToken: function() {\n    return cookieManager.checkCookie(TOKEN);\n  },\n  removeToken: function() {\n    cookieManager.removeCookie(TOKEN);\n  },\n  removeUserInfo: function() {\n    cookieManager.removeCookie(USER_INFO);\n  },\n  getCookie: function(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  },\n  setCookie: function(cname, cvalue, exdays) {\n    cvalue = typeof cvalue !== \"string\" ? JSON.stringify(cvalue) : cvalue;\n    var d = new Date();\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  },\n  removeCookie: function(cname) {\n    document.cookie =\n      cname + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n  },\n  checkCookie: function(cname) {\n    var cookie = cookieManager.getCookie(cname);\n    if (cookie !== \"\") {\n      return true;\n    }\n    return false;\n  }\n};\n\nexport default cookieManager;\n","import axios from \"axios\";\nimport config, { masterKey } from \"../config\";\nimport cookieManager from \"./cookieManager\";\n\nconst axiosMasterRequestConfig = {\n  baseURL: config.baseApi,\n  params: {\n    access_token: masterKey\n  }\n};\n\nexport const baseMasterHttp = {\n  get: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosMasterRequestConfig, requestConfig)\n      : axiosMasterRequestConfig;\n    return axios.get(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  post: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosMasterRequestConfig, requestConfig)\n      : axiosMasterRequestConfig;\n    return axios.post(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  puth: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosMasterRequestConfig, requestConfig)\n      : axiosMasterRequestConfig;\n    return axios.puh(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  delete: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosMasterRequestConfig, requestConfig)\n      : axiosMasterRequestConfig;\n    return axios.delete(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  }\n};\n\nconst axiosRequestConfig = {\n  baseURL: config.baseApi\n};\n\nexport const baseHttp = {\n  get: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosRequestConfig, requestConfig)\n      : axiosRequestConfig;\n    return axios.get(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  post: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosRequestConfig, requestConfig)\n      : axiosRequestConfig;\n    return axios.post(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  put: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosRequestConfig, requestConfig)\n      : axiosRequestConfig;\n    return axios.put(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  delete: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosRequestConfig, requestConfig)\n      : axiosRequestConfig;\n    return axios.delete(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  }\n};\n\n/**\n * The Authorization will be assigned after login\n */\nexport const axiosAuthRequestConfig = {\n  baseURL: config.baseApi,\n  headers: {\n    Authorization: \"Bearer \" + cookieManager.getToken() // This code will get the token from cookie every time reloaded page\n  }\n};\n\nexport const baseAuthHttp = {\n  get: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosAuthRequestConfig, requestConfig)\n      : axiosAuthRequestConfig;\n    return axios.get(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  post: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosAuthRequestConfig, requestConfig)\n      : axiosAuthRequestConfig;\n    return axios.post(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  put: function(url, data, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosAuthRequestConfig, requestConfig)\n      : axiosAuthRequestConfig;\n    return axios.put(url, data, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  },\n  delete: function(url, requestConfig) {\n    requestConfig = requestConfig\n      ? Object.assign({}, axiosAuthRequestConfig, requestConfig)\n      : axiosAuthRequestConfig;\n    return axios.delete(url, {\n      ...requestConfig,\n      headers: requestConfig.headers\n    });\n  }\n};\n","import accountApi from \"./api\";\nimport cookieManager from \"../cookieManager\";\nimport {axiosAuthRequestConfig} from \"../../services/base.http\";\n\nexport const LOGIN = \"LOGIN\";\n\n/**\n *\n * @param {*} data Email and password\n * The login function will authenticate the, will save the token into cookie and update base http config authorization\n * Finnally dispatch to redirect the application to dashboard\n */\nexport function login(data) {  \n  return function (dispatch, history, isRemember) {\n    debugger\n    const userName = 'admin@gmail.com';\n    const password = 'admin';\n    if (data.email === userName && data.password === password) {\n      const exDays = isRemember\n        ? 30\n        : 7;\n      cookieManager.setToken('admin', exDays);\n      cookieManager.setUserInfo({\n        userName: 'admin'\n      }, exDays);\n      axiosAuthRequestConfig.headers.Authorization = \"Bearer \" + cookieManager.getToken();\n      dispatch({\n        type: LOGIN,\n        payload: {\n          isLoggedIn: true\n        }\n      });\n      history.push(\"/dashboard\");\n    } else {\n\n    }\n  }\n  // return function(dispatch, history, isRemember) {   accountApi\n  // .login(data)     .then(res => {       const exDays = isRemember ? 30 : 7;\n  //   cookieManager.setToken(res.data.token, exDays);\n  // cookieManager.setUserInfo(res.data.user, exDays);\n  // axiosAuthRequestConfig.headers.Authorization =         \"Bearer \" +\n  // cookieManager.getToken();       dispatch({         type: LOGIN,\n  // payload: {           isLoggedIn: true         }       });\n  // history.push(\"/dashboard\");     })     .catch(err => {       const { response\n  // } = err;       if (response.status === 401) {         dispatch({\n  // type: LOGIN,           payload: {             isLoggedIn: false,\n  // errMsg: \"Email or password is incorrect\"           }         });       }\n  // }); };\n}\n\n/**\n * Check the token whether is it existing in local storage or not\n */\nexport function checkAuth() {\n  const token = cookieManager.getToken();\n  return token\n    ? true\n    : false;\n}\n\n/**\n *\n * @param {*} role The role of user\n * Checking role base information from cookie\n */\nexport function checkRole(role) {\n  return true;\n}\n\n/**\n * Clean the cookie information and send dispatch to redirect the application to logout\n */\nexport function logout() {\n  cookieManager.removeToken();\n  cookieManager.removeUserInfo();\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN,\n      payload: {\n        isLoggedIn: false\n      }\n    });\n  };\n}\n","import { LOGIN } from \"./action\";\n\nconst initState = {\n  isLoggedIn: false,\n  errMsg: \"\"\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      const { isLoggedIn, errMsg } = action.payload;\n      state = isLoggedIn\n        ? {\n            ...state,\n            isLoggedIn: isLoggedIn,\n            errMsg: \"\"\n          }\n        : {\n            ...state,\n            isLoggedIn: isLoggedIn,\n            errMsg: errMsg\n          };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n","// Initialize Firebase\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASEKEY || \"\",\n  authDomain: \"t-ecommerce.firebaseapp.com\",\n  databaseURL: \"https://t-ecommerce.firebaseio.com\",\n  projectId: \"t-ecommerce\",\n  storageBucket: \"gs://t-ecommerce.appspot.com\",\n  messagingSenderId: \"241651271627\"\n};\nconst fbase = firebase.initializeApp(firebaseConfig);\nexport default fbase;\n","import firebase from \"../../firebase-config\";\nimport { generateNewFileName } from \"../common\";\n\nlet storeageRef = firebase.storage().ref();\n\nexport const UPLOAD_FINISH = \"UPLOAD_FINISH\";\nexport const UPDATE_PROGRESS = \"UPDATE_PROGRESS\";\nexport const DELETE_IMAGE = \"DELETE_IMAGE\";\nexport const CLEAN_UP = \"CLEAN_UP\";\n\nexport function uploadFile(file, uploadName) {\n  const newFileName = generateNewFileName(file.name);\n\n  return function(dispatch) {\n    let imageRef = storeageRef.child(uploadName + \"/\" + newFileName);\n    const uploadTask = imageRef.put(file);\n    uploadTask\n      .then(snapShot => {\n        imageRef\n          .getDownloadURL()\n          .then(url => {\n            dispatch({\n              type: UPLOAD_FINISH,\n              payload: {\n                finished: true,\n                uploadName: uploadName,\n                fileUrls: [url]\n              }\n            });\n          })\n          .catch(err => {\n            console.log(\"Can not load firl url\");\n          });\n      })\n      .catch(err => {\n        console.log(\"Can not upload file\");\n      });\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        const progressData =\n          progress < 100\n            ? {\n                finished: false,\n                progress: progress\n              }\n            : {\n                finished: true,\n                progress: 0\n              };\n        dispatch({\n          type: UPDATE_PROGRESS,\n          payload: {\n            finished: progressData.finished,\n            progress: progressData.progress,\n            uploadName: uploadName\n          }\n        });\n      },\n      err => {\n        console.log(\"Can not upload file\");\n      }\n    );\n  };\n}\n\nexport function uploadFiles(files, uploadName) {\n  let tasks = [];\n  let downloadUrlTasks = [];\n  for (let file of files) {\n    const newFileName = generateNewFileName(file.name);\n    let imageRef = storeageRef.child(uploadName + \"/\" + newFileName);\n    tasks.push(imageRef.put(file));\n    downloadUrlTasks.push(imageRef.getDownloadURL());\n  }\n  return function(dispatch) {\n    Promise.all(tasks)\n      .then(res => {\n        console.log(res);\n        Promise.all(downloadUrlTasks)\n          .then(downloadRes => {\n            dispatch({\n              type: UPLOAD_FINISH,\n              payload: {\n                finished: true,\n                uploadName: uploadName,\n                fileUrls: downloadRes\n              }\n            });\n          })\n          .catch(err => {\n            console.log(\"Can not download file url\");\n          });\n      })\n      .catch(err => {\n        console.log(\"Can not upload file\");\n      });\n  };\n}\n\nexport function deleteFile(index, uploadName) {\n  return function(dispatch) {\n    dispatch({\n      type: DELETE_IMAGE,\n      payload: {\n        uploadName: uploadName,\n        index: index\n      }\n    });\n  };\n}\n\nexport function cleanupUpload() {\n  return function(dispatch) {\n    dispatch({\n      type: CLEAN_UP,\n      payload: {}\n    });\n  };\n}\n","import {\n  UPLOAD_FINISH,\n  UPDATE_PROGRESS,\n  DELETE_IMAGE,\n  CLEAN_UP\n} from \"./action\";\n\nconst initState = {\n  finished: false,\n  uploadName: \"\",\n  progress: 0,\n  fileUrls: [],\n  v: 1\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case UPLOAD_FINISH:\n      state = {\n        ...state,\n        finished: action.payload.finished,\n        uploadName: action.payload.uploadName,\n        fileUrls: action.payload.fileUrls,\n        v: state.v + 1\n      };\n      break;\n    case UPDATE_PROGRESS:\n      state = {\n        ...state,\n        finished: action.payload.finished,\n        uploadName: action.payload.uploadName,\n        progress: action.payload.progress,\n        v: state.v + 1\n      };\n      break;\n    case DELETE_IMAGE:\n      const { index } = action.payload;\n      let { fileUrls } = state;\n      // eslint-disable-next-line no-unused-expressions\n      fileUrls && fileUrls.length > 0 ? fileUrls.splice(index, 1) : fileUrls;\n      state = {\n        ...state,\n        fileUrls: [...fileUrls],\n        v: state.v + 1\n      };\n      break;\n    case CLEAN_UP:\n      state = {\n        ...initState,\n        v: state.v + 1\n      };\n    // eslint-disable-next-line no-fallthrough\n    default:\n      break;\n  }\n  return state;\n};\n","export const RENDER_MENU = \"RENDER_MENU\";\n\nexport function updateMenu() {\n  return function(dispatch) {\n    dispatch({\n      type: RENDER_MENU,\n      payload: {\n        render: true\n      }\n    });\n  };\n}\n\nexport function cleanupMenu() {\n  return function(dispatch) {\n    dispatch({\n      type: RENDER_MENU,\n      payload: {\n        render: false\n      }\n    });\n  };\n}\n","import { RENDER_MENU } from \"./action\";\n\nconst initState = {\n  render: false\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case RENDER_MENU:\n      if (state.render !== action.payload.render) {\n        state = {\n          ...state,\n          render: action.payload.render\n        };\n      }\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n","import categoryApi from \"./api\";\n\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\n\nexport function getAllCategories() {\n  return categoryApi.getAll().then(res => res.data);\n}\n\nexport function getById(id) {\n  return categoryApi.getById(id).then(res => res.data);\n}\n\nexport function createCategory(data) {\n  return categoryApi.create(data);\n}\n\nexport function updateCategory(data) {\n  return categoryApi.update(data);\n}\n\nexport function updateCategoryTree(data) {\n  return categoryApi.updateTree(data);\n}\n\nexport function deleteCategory(id) {\n  return function(dispatch) {\n    categoryApi.delete(id).then(res => {\n      dispatch({\n        type: DELETE_CATEGORY,\n        payload: {\n          id: id\n        }\n      });\n    });\n  };\n}\n","import { DELETE_CATEGORY } from \"./action\";\n\nconst initState = {\n  id: \"\",\n  v: 1\n};\n\nexport default (state = initState, action) => {\n  const { id } = action.payload ? action.payload : \"\";\n  switch (action.type) {\n    case DELETE_CATEGORY:\n      if (id !== state.id) {\n        state = {\n          ...state,\n          id: id,\n          v: state.v + 1\n        };\n      }\n      break;\n  }\n  return state;\n};\n","import { UPDATE_STATE } from \"./action\";\nimport { buttonState } from \"../../const/enum\";\n\n/**\n * loading\n * disabled\n * success\n * error\n * nothing\n */\nconst initState = {\n  buttonState: buttonState.NOTHING,\n  actionName: \"\",\n  v: 1\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE_STATE:\n      state = {\n        ...state,\n        buttonState: action.payload.buttonState,\n        actionName: action.payload.actionName,\n        v: state.v + 1\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n","export const buttonState = {\n  LOADING: \"loading\",\n  DISABLED: \"disabled\",\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n  NOTHING: \"\"\n};\n\nexport const updateButtonState = {\n  NONE: \"none\",\n  UPDATING: \"updating\"\n};\n","import { UPDATE_TABLE_BODY } from \"./action\";\n\nconst initState = {\n  tableName: \"\",\n  data: [],\n  count: 0,\n  v: 0\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE_TABLE_BODY:\n      state = {\n        ...state,\n        data: action.payload.data.rows,\n        count: action.payload.data.count,\n        v: state.v + 1\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n","import { THROW_MSG } from \"./action\";\n\nconst initState = {\n  msg: \"\",\n  type: \"\"\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case THROW_MSG:\n      state = {\n        ...state,\n        msg: action.payload.msg,\n        type: action.payload.type\n      };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\n\n// Import all reducer here\nimport account from \"./account/reducer\";\nimport upload from \"./upload/reducer\";\nimport menu from \"./menu/reducer\";\nimport categories from \"./category/reducer\";\nimport waitingButton from \"./waiting_button/reducer\";\nimport table from \"./table/reducer\";\nimport toast from \"./toast/reducer\";\n\nexport default combineReducers({\n  categories, // Categories page\n  menu, // The left menu\n  account,\n  upload,\n  waitingButton,\n  form: reduxFormReducer,\n  table,\n  toast\n});\n","export const UPDATE_STATE = \"UPDATE_STATE\";\n\nexport const updateState = (buttonState, actionName) => {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_STATE,\n      payload: {\n        actionName: actionName,\n        buttonState: buttonState\n      }\n    });\n  };\n};\n","export const UPDATE_TABLE_BODY = \"UPDATE_TABLE_BODY\";\n\n/**\n *\n * @param {*} tableName Table name to update which table\n * @param {*} data Data of body to rerender\n */\nexport const updateBody = (tableName, data) => {\n  return dispatch => {\n    dispatch({\n      type: UPDATE_TABLE_BODY,\n      payload: {\n        data: data,\n        tableName: tableName\n      }\n    });\n  };\n};\n","export const THROW_MSG = \"THROW_MSG\";\n\nexport const throwToastMsg = (msg, type) => {\n  return dispatch => {\n    dispatch({\n      type: THROW_MSG,\n      payload: {\n        msg: msg,\n        type: type\n      }\n    });\n  };\n};\n","import { createStore } from \"redux\";\nimport reducers from \"./services/reducers\";\n\nexport default createStore(reducers);\n","import validator from \"validator\";\n\nexport const required = (value, ...rest) => {\n  return value || typeof value === \"number\"\n    ? undefined\n    : `${rest[2]} is required.`;\n};\n\nexport const email = value =>\n  validator.isEmail(value) ? undefined : `${value} is not a valid email.`;\n","import React from \"react\";\n\nexport const renderInput = ({\n  input,\n  className,\n  label,\n  type,\n  meta: { touched, error, warning }\n}) => (\n  <div>\n    <input className={className} {...input} placeholder={label} type={type} />\n    {touched &&\n      ((error && <span className=\"message error\">{error}</span>) ||\n        (warning && <span className=\"message warning\">{warning}</span>))}\n  </div>\n);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\n\n// Import images\nimport logo from \"./../../images/logo-trends-featured.png\";\n\n// Import styles\nimport \"./style.css\";\n\n// Import validator\nimport { required, email } from \"../../validator/validator-input\";\n\n// Import render Input\nimport { renderInput } from \"../../renderfields/dask\";\n\n// Import actions\nimport { login, checkAuth } from \"../../services/account/action\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remember: false,\n      rememberClass: \"checkbox lbl-remember\"\n    };\n    this.remember = this.remember.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  }\n\n  remember() {\n    this.setState({\n      remember: !this.state.remember,\n      rememberClass: !this.state.remember\n        ? \"checkbox active lbl-remember\"\n        : \"checkbox lbl-remember\"\n    });\n  }\n\n  submitLogin(values) {\n    const { history } = this.props;\n    login(values)(this.props.dispatch, history, this.state.remember);\n  }\n\n  componentDidMount() {\n    if (checkAuth()) {\n      const { history } = this.props;\n      history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { pristine, handleSubmit, submitting, invalid, errMsg } = this.props;\n    return (\n      <form className=\"login-page\" onSubmit={handleSubmit(this.submitLogin)}>\n        <div className=\"login-box\">\n          <div className=\"logo-box\">\n            <img className=\"logo\" src={logo} alt=\"\" />\n          </div>\n          <div className=\"login-form\">\n            <h3 className=\"font-green\">Sign In</h3>\n            <div className=\"summary-error-msg\">\n              <span className=\"message error\">{errMsg}</span>\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                component={renderInput}\n                label=\"Enter your email\"\n                validate={[required, email]}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Field\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                component={renderInput}\n                label=\"Enter your password\"\n                validate={[required]}\n              />\n            </div>\n            <div className=\"form-actions\">\n              <button\n                onClick={this.login}\n                disabled={pristine || submitting || invalid}\n                className=\"btn btn-green\"\n              >\n                {\" \"}\n                Login\n              </button>\n              <label htmlFor=\"remember\" className={this.state.rememberClass}>\n                <input\n                  type=\"checkbox\"\n                  onChange={this.remember}\n                  className=\"remember\"\n                  id=\"remember\"\n                />{\" \"}\n                Remember\n                <span />\n              </label>\n              <a className=\"forgot-pwd\">Forgot Password?</a>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { errMsg } = state.account;\n  return {\n    errMsg: errMsg\n  };\n};\n\nconst enhance = compose(\n  reduxForm({\n    form: \"loginForm\"\n  }),\n  connect(mapStateToProps)\n);\n\nexport default enhance(Login);\n","import React from \"react\";\n\n// Import styles\nimport \"./style.css\";\n\nclass IconBar extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"icon-bar display-flex align-items-center justify-content-center\">\n        <span className=\"bag\">{this.props.number}</span>\n        <i className={this.props.icon} />\n      </div>\n    );\n  }\n}\n\nexport default IconBar;\n","import React from 'react';\nconst clickOutside = (WrappedComponent) => {\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                isOpen: false,\n                v: 1\n            };\n            this.node = React.createRef();\n            this.isCanceled = false;\n        }\n\n        componentDidMount() {\n            const {isOpen} = this.state;\n            document.addEventListener('mousedown', this.handlerClick(isOpen), false);\n        }\n\n        componentWillUnmount() {\n            document.removeEventListener('mousedown', this.handlerClick, false);\n            this.isCanceled = true;\n        }\n\n        handlerClick = (isOpen) => (event) => {           \n            if (!this.isCanceled) {\n                if (this.node.contains(event.target)) {\n                    setTimeout(() => {\n                        this.toggle();\n                    }, 200);\n                } else if(isOpen){\n                    this.setState({\n                        isOpen: false,\n                        v: this.state.v + 1\n                    });\n                }\n            }\n        }\n\n        toggle = () => {\n            if (!this.isCanceled) {\n                this.setState({\n                    isOpen: !this.state.isOpen,\n                    v: this.state.v + 1\n                });\n            }\n        }\n\n        shouldComponentUpdate(nextProps, nextState) {\n            return (this.state.v !== nextState.v);\n        }\n\n        render() {\n            return <WrappedComponent nodeRef={ el => this.node = el } isOpen={ this.state.isOpen }></WrappedComponent>\n        }\n    }\n}\n\nexport default clickOutside;","import React from \"react\";\n\nexport const MatchPropsContext = React.createContext();\n","import React from \"react\";\n\n// Import styles\nimport \"./style.css\";\n\nclass DropdownMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlerClick = this.handlerClick.bind(this);\n  }\n\n  handlerClick() {\n    const { handlerClick } = this.props;\n    handlerClick();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    const { menuItem } = this.props;\n    const bag = menuItem.bag ? (\n      <span className=\"bag\" style={menuItem.bagColor}>\n        {menuItem.bagNumber}\n      </span>\n    ) : (\n      \"\"\n    );\n    return (\n      <div\n        className=\"dropdown-menu-item display-flex\"\n        onClick={this.handlerClick}\n      >\n        <i className={menuItem.icon} />\n        <span>{menuItem.name}</span>\n        {bag}\n      </div>\n    );\n  }\n}\n\nexport default DropdownMenuItem;\n","import React from \"react\";\n\n// Import styles\nimport \"./style.css\";\n\n// Import components\nimport DropdownMenuItem from \"./../DropdownMenuItem\";\n\nclass DropdownMenu extends React.Component {\n  render() {\n    const { listMenu, menuStyles, isOpen } = this.props;\n    const generateMenu = listMenu.map((res, index) => {\n      return (\n        <DropdownMenuItem\n          key={index}\n          menuItem={res}\n          handlerClick={res.handlerClick}\n        />\n      );\n    });\n    const className = isOpen ? \"dropdown-menu open\" : \"dropdown-menu close\";\n    return (\n      <div className={className} style={menuStyles}>\n        {generateMenu}\n      </div>\n    );\n  }\n}\n\nexport default DropdownMenu;\n","import React from \"react\";\n\n// Import hoc\nimport clickOutside from \"../../../../hoc/clickOutside\";\n\n// Import styles\nimport \"./style.css\";\n\n// Import actions\nimport { logout } from \"../../../../services/account/action\";\n\n// Import context\nimport { MatchPropsContext } from \"../../../../context\";\n\n// Import components\nimport DropdownMenu from \"../../../DropdownMenu\";\n\nclass UserBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listMenu: []\n    };\n    const { history } = this.props.matchProps;\n    this.state.listMenu.push({\n      icon: \"far fa-user\",\n      name: \"My Profile\"\n    });\n    this.state.listMenu.push({\n      icon: \"fas fa-lock\",\n      name: \"Logout\",\n      handlerClick: () => {\n        logout();\n        history.push(\"/login\");\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.isOpen !== nextProps.isOpen;\n  }\n\n  render() {\n    console.log(\"bind\");\n    return (\n      <div\n        ref={this.props.nodeRef}\n        className=\"user-bar display-flex  align-items-center\"\n      >\n        <img src=\"\" />\n        <span>Nick Tuan Lam</span>\n        <i className=\"fas fa-angle-down\" />\n        <DropdownMenu\n          listMenu={this.state.listMenu}\n          isOpen={this.props.isOpen}\n          menuStyles={styles.menuStyles}\n        />\n      </div>\n    );\n  }\n}\n\nconst UserBarWrrap = props => (\n  <MatchPropsContext.Consumer>\n    {matchProps => <UserBar {...props} matchProps={matchProps} />}\n  </MatchPropsContext.Consumer>\n);\n\nconst styles = {\n  menuStyles: {\n    top: \"100%\",\n    right: \"-8px\",\n    width: \"160px\"\n  }\n};\n\nexport default clickOutside(UserBarWrrap);\n","import React from 'react';\n\n// Import images\nimport logo from '../../images/logo-trends-featured.png';\n\n// Import styles\nimport './style.css';\n\n// Import components\nimport IconBar from '../../components/IconBar';\nimport UserBar from './components/UserBar';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  \n  shouldComponentUpdate(){\n    return false;\n  }\n\n  render() {        \n    return (\n      <div className='header display-flex'>\n        <div className='left-header display-flex align-items-center'>\n          <img src={ logo } />\n          <button className='menu-bar'>\n            <i className='fas fa-bars'></i>\n          </button>\n        </div>\n        <div className='right-header display-flex'>\n          <div className='bar'>\n            <UserBar></UserBar>\n          </div>\n          <div className='bar'>\n            <IconBar number={ 0 } icon='far fa-envelope-open'></IconBar>\n          </div>\n          <div className='bar'>\n            <IconBar number={ 0 } icon='far fa-bell'></IconBar>\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\n// Import styles\nimport \"./style.css\";\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"wrap-body display-flex justify-content-center\">\n        <div className=\"contain\">      \n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React from \"react\";\nimport { ToastContainer, ToastStore } from \"react-toasts\";\nimport { connect } from \"react-redux\";\n\n// Import components\nimport Header from \"../components/Header\";\nimport Body from \"../components/Body\";\n\nclass MainLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Body>{this.props.children}</Body>\n        <ToastContainer\n          store={ToastStore}\n          position={ToastContainer.POSITION.TOP_RIGHT}\n          lightBackground\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  if (state.toast) {\n  }\n  return {};\n};\n\nexport default connect(mapStateToProps)(MainLayout);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Loadable from \"react-loadable\";\n\n// Import components\nimport Login from \"./scenes/Login\";\nimport MainLayout from \"./layouts/MainLayout\";\n\n// Import styles\nimport \"./styles/app.css\";\nimport \"./styles/normalize.css\";\n\n// Import services\nimport { checkAuth, checkRole } from \"./services/account/action\";\n\n// Import context\nimport { MatchPropsContext } from \"./context\";\n\nconst MainLayoutRoute = ({ component: Component, ...rest }) => {\n  // If the user is authenticated. Render normal component. Redirect to login if not\n  if (checkAuth()) {\n    // If the user does not have role. We will redirect them to dashboard\n    if (checkRole()) {\n      return (\n        <Route\n          {...rest}\n          render={matchProps => (\n            <MatchPropsContext.Provider value={matchProps}>\n              <MainLayout>\n                <Component {...matchProps} />\n              </MainLayout>\n            </MatchPropsContext.Provider>\n          )}\n        />\n      );\n    } else {\n      return (\n        <Route {...rest} render={matchProps => <Redirect to=\"/dashboard\" />} />\n      );\n    }\n  } else {\n    return <Route {...rest} render={matchProps => <Redirect to=\"/login\" />} />;\n  }\n};\n\nconst Dashboard = Loadable({\n  loader: () => import(\"./scenes/Dashboard\"),\n  loading: function() {\n    return <div>Loading...</div>;\n  }\n});\n\n/*\n* Make the dashboard component preload because after login user is always redirected to dashbpard page\n* It means when the user access the login page. The Dashboard will be loaded concurrency\n*/\nDashboard.preload();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/\" component={Login} />\n        <MainLayoutRoute exact path=\"/dashboard\" component={Dashboard} />       \n        <MainLayoutRoute path=\"*\" component={Dashboard} />\n      </Switch>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}